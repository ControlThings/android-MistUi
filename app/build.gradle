
apply plugin: 'com.android.application'


def getGitVersion = { ->
    def stdout = new ByteArrayOutputStream()

    exec {
       // commandLine 'git', 'rev-parse', '--short', 'HEAD'
        commandLine 'git', 'describe', '--abbrev=4', '--always', '--tags'
        standardOutput = stdout
    }


    return stdout.toString().trim()
}

def getGitClean = { ->

    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'status', '--porcelain'
        standardOutput = stdout

    }
    if ("${stdout.size()}" > 0) {
        return "-d"
    } else {
        return "-c"
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'

    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {

        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def version_code = versionProps['VERSION_CODE'].toInteger()
        def version_name = versionProps['VERSION_NAME']
        def git_version = getGitVersion

        defaultConfig {
            applicationId "fi.ct.mist"
            minSdkVersion 16
            targetSdkVersion 23
            versionCode version_code
            versionName version_name
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            vectorDrawables.useSupportLibrary = true

            buildConfigField "String", "GitVersion", "\"${git_version}\""
            buildConfigField "String", "GitClean", "\"${getGitClean()}\""
        }

        buildTypes {
            release {
                //minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

/*
                applicationVariants.all { variant ->
                    variant.outputs.each { output ->
                        output.outputFileName = file("apk/mist.apk")
                    }
                }
*/

            }
        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.0'
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:design:25.0.0'
    compile 'com.android.support:support-v4:25.0.0'
    compile 'com.android.support:recyclerview-v7:25.0.0'
    compile 'me.dm7.barcodescanner:zxing:1.9'
    compile project(':acra')
    compile project(':MistApi')
}
